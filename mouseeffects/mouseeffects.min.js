(()=>{if(window["MouseEffects"])return console.error("MouseEffects: disabled - global namespace 'MouseEffects' is already in use.");if('ontouchstart' in document.documentElement)return console.warn("MouseEffects: disabled - touch device detected.");const _=[];_.Subscribe=s=>!_.includes(s)&&_.push(s);_.Unsubscribe=s=>(i=>(i>-1)&&_.splice(i,1))(_.indexOf(s));_.Start=(s=".has-mouse-effects")=>{document.querySelectorAll(s??".has-mouse-effects").forEach(_.Subscribe);addEventListener("mousemove",u,{passive:true})};_.Stop=()=>{_.forEach(s=>_.Unsubscribe(s)&&s.classList.remove("mouse-effects-set"));removeEventListener("mousemove",u)};const a=(s,e)=>{const t=e.pageY-s.offsetTop;const l=e.pageX-s.offsetLeft;const f=(a,b)=>s.style.setProperty(a,b);f('--cursor-top--px',`${t}px`);f('--cursor-left--px',`${l}px`);f('--cursor-top--percent',`${t/s.offsetHeight*100}%`);f('--cursor-left--percent',`${l/s.offsetWidth*100}%`);s.classList.add("mouse-effects-set")};const u=e=>_.forEach(s=>a(s,e));window["MouseEffects"]=_})();