function getFile(e="",t={},a){return getFile.load(e,{},a)}(e=>{const{get:t,set:a}=(t=>({get:a=>t("readonly",t=>e(t.get(a))),set:(a,r)=>t("readwrite",t=>(t.put(r,a),e(t.transaction))),del:a=>t("readwrite",t=>(t.delete(a),e(t.transaction)))}))((t,a)=>e(Object.assign(indexedDB.open("file-database"),{onupgradeneeded:e=>e.target.result.createObjectStore("files")})).then(e=>a(e.transaction("files",t).objectStore("files"))));Object.defineProperties(getFile,{load:{writable:!1,value:async(e,r={},i)=>{const o=await fetch(e,{method:"HEAD"});if(!o.ok)return;const n=6e3*Math.floor(new Date(o.headers.get("Last-Modified")).getTime()/6e3);let s=localStorage.getItem("grezisek-"+e);if((s=s?JSON.parse(s):{lastModified:"0"}).lastModified==n)return"json"==i?JSON.parse(s.data):s.data;const d=await fetch(e,Object.assign({cache:"reload"},r));if(!d.ok)return;const c=await d.text();return a("grezisek-"+e,JSON.stringify({lastModified:n,data:c})),c!=JSON.parse(t("grezisek-"+e)).data&&(console.warn(`getFile: file content mismatch in cached ${e}. Deleting corrupted cache data...`),del("grezisek-"+e)),c}}})})(e=>new Promise((t,a)=>{e.oncomplete=e.onsuccess=(()=>t(e.result)),e.onabort=e.onerror=(()=>a(e.error))}));
